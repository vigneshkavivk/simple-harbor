# Global configuration
global:
  namespace: harbor

# Harbor configuration
harbor:
  image:
    repository: goharbor/harbor-core
    tag: v2.7.0
    pullPolicy: IfNotPresent

  service:
    type: LoadBalancer
    port: 80
    targetPort: 8080
    annotations: {}
    loadBalancerIP: ""

  ingress:
    enabled: false
    className: ""
    annotations: {}
    hosts:
      - host: harbor.example.com
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []

  persistence:
    enabled: true
    storageClass: harbor-storage
    volumeName: harbor-simple-pv
    accessMode: ReadWriteOnce
    size: 10Gi

  adminPassword: Harbor12345
  secretKey: not-a-secure-key
  externalURL: http://harbor.example.com

# PostgreSQL configuration
postgresql:
  enabled: true
  image:
    repository: postgres
    tag: 13-alpine
    pullPolicy: IfNotPresent

  service:
    port: 5432

  persistence:
    enabled: true
    storageClass: harbor-storage
    volumeName: harbor-simple-database-pv
    accessMode: ReadWriteOnce
    size: 8Gi

  credentials:
    username: harbor
    password: change-me
    database: registry

# Redis configuration
redis:
  enabled: true
  host: my-harbor-redis
  port: 6379
  password: admin123456  # Must match password in core env vars
  image:
    repository: redis
    tag: 6-alpine
    pullPolicy: IfNotPresent

  service:
    port: 6379

  persistence:
    enabled: true
    storageClass: harbor-storage
    volumeName: harbor-simple-redis-pv
    accessMode: ReadWriteOnce
    size: 4Gi
